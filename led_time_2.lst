C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LED_TIME_2
OBJECT MODULE PLACED IN led_time_2.obj
COMPILER INVOKED BY: B:\Keil C51\C51\BIN\C51.EXE src\led_time_2.c BROWSE DEBUG OBJECTEXTEND PRINT(.\led_time_2.lst) OBJE
                    -CT(led_time_2.obj)

line level    source

   1          #include "reg51.h"
   2          #include "stdio.h"
   3          #include "key.h"
   4          #include "serial_port.h"
   5          
   6          #define NORMAL_RUN 0
   7          #define SET_HOUR 1
   8          #define SET_MIN 2
   9          #define SET_SEC 3
  10          
  11          sbit LSA=P1^7;   //38移位按键
  12          sbit LSB=P1^6;
  13          sbit LSC=P1^5;
  14          // sfr AUXR = 0x8e;
  15          
  16          char time_count;
  17          int display_nums[11] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x67,0x40}; // 0-9 and -
  18          int t [8] ;
  19          int mode;
  20          // int the_last_key;
  21          int t_count;
  22          int reg_value;
  23          char hour = 0;
  24          char min = 0;
  25          char sec = 0;
  26          
  27          void time_init(void); // 计时器0 初始化
  28          void time_cal(int *);  // 时间计算
  29          void select_led(int);  // select index of leds 38译码器  使用 74hc138
  30          void led_display(int,int); // 数码管显示
  31          void prinf_(void);
  32          void set_time(void);
  33          
  34          
  35          void select_led(int i)
  36          {
  37   1              switch(i)
  38   1              {
  39   2                  case 0:
  40   2                      LSA = 0; LSB = 0; LSC = 0; break;
  41   2                  case 1:
  42   2                      LSA = 1; LSB = 0; LSC = 0; break;
  43   2                  case 2:
  44   2                      LSA = 0; LSB = 1; LSC = 0; break;
  45   2                  case 3:
  46   2                      LSA = 1; LSB = 1; LSC = 0; break;
  47   2                  case 4:
  48   2                      LSA = 0; LSB = 0; LSC = 1; break;
  49   2                  case 5:
  50   2                      LSA = 1; LSB = 0; LSC = 1; break;
  51   2                  case 6:
  52   2                      LSA = 0; LSB = 1; LSC = 1; break;
  53   2                  case 7:
  54   2                      LSA = 1; LSB = 1; LSC = 1; break;
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 2   

  55   2                  default:
  56   2                      break;
  57   2              }
  58   1      }
  59          
  60          
  61          void time_cal( int *a)
  62          {
  63   1          char dpl [8] = {0,0,10,0,0,10};
  64   1          int i ;
  65   1      
  66   1          if(time_count == 60)
  67   1          {
  68   2              min += 1;
  69   2              time_count = 0 ;
  70   2          }
  71   1          sec = time_count;
  72   1      
  73   1          if(min == 60)
  74   1          {
  75   2              hour += 1;
  76   2              min = 0 ;
  77   2          }
  78   1          if(hour == 24)
  79   1          {
  80   2              hour = 0;
  81   2          }
  82   1          dpl[0] = hour / 10;
  83   1          dpl[1] = hour % 10;
  84   1          dpl[3] = min / 10;
  85   1          dpl[4] = min % 10;
  86   1          dpl[6] = sec / 10;
  87   1          dpl[7] = sec % 10;
  88   1      
  89   1          for(i=0;i<=7;i++)
  90   1          {
  91   2              a[i] = display_nums[dpl[i]];
  92   2          }
  93   1      
  94   1      }
  95          
  96          
  97          void time_init(void)            //1毫秒@11.0592MHz
  98          {
  99   1      
 100   1              TMOD &= 0xf0;
 101   1              TMOD |= 0x01;
 102   1              TH0 = 0xfc;
 103   1              TL0 = 0x21;
 104   1              TF0 = 0;
 105   1              TR0 = 1;
 106   1      
 107   1      }
 108          
 109          void led_display( int display_mode,int index)
 110          {
 111   1          P0 = 0x00;
 112   1          switch(display_mode)
 113   1          {
 114   2              case NORMAL_RUN:
 115   2              {
 116   3                  select_led(index);
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 3   

 117   3                      P0 = t[index];
 118   3              }
 119   2      
 120   2              break;
 121   2      
 122   2              case SET_HOUR:
 123   2              {
 124   3                  if(index == 0 || index == 1)
 125   3                  {
 126   4                      if(t_count > 400)
 127   4                      {
 128   5                          select_led(index);
 129   5                          P0 = t[index];
 130   5                      }
 131   4      
 132   4                  }
 133   3                  else
 134   3                  {
 135   4                      select_led(index);
 136   4                      P0 = t[index];
 137   4                  }
 138   3      
 139   3              }
 140   2      
 141   2              break;
 142   2      
 143   2              case SET_MIN:
 144   2              {
 145   3                  if(index == 3 || index == 4)
 146   3                  {
 147   4                      if(t_count > 400)
 148   4                      {
 149   5                          select_led(index);
 150   5                          P0 = t[index];
 151   5                      }
 152   4      
 153   4                  }
 154   3                  else
 155   3                  {
 156   4                      select_led(index);
 157   4                      P0 = t[index];
 158   4                  }
 159   3      
 160   3              }
 161   2      
 162   2              break;
 163   2      
 164   2      
 165   2              case SET_SEC:
 166   2              {
 167   3                  if(index == 6 || index == 7)
 168   3                  {
 169   4                      if(t_count > 400)
 170   4                      {
 171   5                          select_led(index);
 172   5                          P0 = t[index];
 173   5                      }
 174   4      
 175   4                  }
 176   3                  else
 177   3                  {
 178   4                      select_led(index);
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 4   

 179   4                      P0 = t[index];
 180   4                  }
 181   3      
 182   3              }
 183   2      
 184   2              break;
 185   2      
 186   2          }
 187   1      
 188   1      
 189   1      
 190   1      }
 191          
 192          void set_time()
 193          {
 194   1          switch(mode)
 195   1          {
 196   2              case NORMAL_RUN:
 197   2                      {
 198   3                  if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
 199   4                     mode = SET_HOUR;
 200   4                  }
 201   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))){
 202   4                      mode = NORMAL_RUN;
 203   4                  }
 204   3                  if(reg_value == (SELECT | KEY_DOWN)){
 205   4                     mode = SET_HOUR;
 206   4                  }
 207   3                  if(reg_value == (CONFIRM | KEY_DOWN)){
 208   4                      mode = NORMAL_RUN;
 209   4                  }
 210   3              }
 211   2              break;
 212   2      
 213   2              case SET_HOUR:{
 214   3                  if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
 215   4                      mode = SET_MIN;
 216   4                  }
 217   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))){
 218   4                      mode = NORMAL_RUN;
 219   4                  }
 220   3                  // if(reg_value == (SELECT | KEY_CONTINUE)){
 221   3                  //     mode = SET_MIN;
 222   3                  // }
 223   3                  if(reg_value == (CONFIRM | KEY_CONTINUE)){
 224   4                      mode = NORMAL_RUN;
 225   4                  }
 226   3                  if(reg_value == (PLUS | KEY_DOWN)){
 227   4                      hour += 1;
 228   4                  }
 229   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 230   4                      hour += 1;
 231   4                  }
 232   3                  if(reg_value == (MINUS | KEY_DOWN)){
 233   4                      hour -= 1;
 234   4                      if(hour < 0)
 235   4                      hour += 24;
 236   4                  }
 237   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 238   4                      hour -= 1;
 239   4                      if(hour < 0)
 240   4                      hour += 24;
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 5   

 241   4                  }
 242   3              }
 243   2              break;
 244   2      
 245   2              case SET_MIN:{
 246   3                  if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
 247   4                      mode = SET_SEC;
 248   4                  }
 249   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))){
 250   4                      mode = NORMAL_RUN;
 251   4                  }
 252   3                  // if(reg_value == (SELECT | KEY_CONTINUE)){
 253   3                  //     mode = SET_SEC;
 254   3                  // }
 255   3                  if(reg_value == (CONFIRM | KEY_CONTINUE)){
 256   4                      mode = NORMAL_RUN;
 257   4                  }
 258   3                  if(reg_value == (PLUS | KEY_DOWN)){
 259   4                      min += 1;
 260   4                  }
 261   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 262   4                      min += 1;
 263   4                  }
 264   3                  if(reg_value == (MINUS | KEY_DOWN)){
 265   4                      min -= 1;
 266   4                      if(min < 0)
 267   4                      min += 60;
 268   4                  }
 269   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 270   4                      min -= 1;
 271   4                      if(min < 0)
 272   4                      min += 60;
 273   4                  }
 274   3              }
 275   2              break;
 276   2      
 277   2              case SET_SEC:{
 278   3                  if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
 279   4                      mode = SET_HOUR;
 280   4                  }
 281   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))){
 282   4                      mode = NORMAL_RUN;
 283   4                  }
 284   3                  // if(reg_value == (SELECT | KEY_CONTINUE)){
 285   3                  //     mode = SET_HOUR;
 286   3                  // }
 287   3                  if(reg_value == (CONFIRM | KEY_CONTINUE)){
 288   4                      mode = NORMAL_RUN;
 289   4                  }
 290   3                  if(reg_value == (PLUS | KEY_DOWN)){
 291   4                      sec += 1;
 292   4                  }
 293   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 294   4                      sec += 1;
 295   4                  }
 296   3                  if(reg_value == (MINUS | KEY_DOWN)){
 297   4                      sec -= 1;
 298   4                      if(sec < 0)
 299   4                      sec += 60;
 300   4                  }
 301   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 302   4                      sec -= 1;
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 6   

 303   4                      if(sec < 0)
 304   4                      sec += 60;
 305   4                  }
 306   3              }
 307   2              break;
 308   2      
 309   2          default: break;
 310   2      
 311   2          }
 312   1      }
 313          
 314          main()
 315          {
 316   1          int i = 0;
 317   1          mode = NORMAL_RUN;
 318   1          time_count = 0;
 319   1          time_init();
 320   1          key_init();
 321   1          init_serial_port();
 322   1          P0 = 0x00;
 323   1          time_cal(t);
 324   1      
 325   1          while(1)
 326   1          {
 327   2              if(TF0){
 328   3      
 329   3                  TH0 = 0xfc; //设置定时初值
 330   3                  TL0 = 0x21; //设置定时初值  初略测试 996每秒误差4-5 ms 改992
 331   3                  TF0 = 0;
 332   3                  t_count++;
 333   3      
 334   3                  if(t_count % 1 == 0){
 335   4                      led_display(mode,i++);
 336   4                      if(i>7) i = 0;
 337   4                  }
 338   3      
 339   3                  if(t_count % 10 ==0){
 340   4                      get_key(&reg_value);
 341   4                  }
 342   3      
 343   3                  if(t_count % 20 ==0){
 344   4                      set_time();
 345   4                  }
 346   3      
 347   3                  if(t_count % 50 == 0){
 348   4                      time_cal(t);
 349   4                  }
 350   3      
 351   3                              if(t_count % 1000 == 0){
 352   4                      t_count = 0;
 353   4                                      time_count++;
 354   4                              }
 355   3      
 356   3              }
 357   2          }
 358   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1088    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 12:24:34 PAGE 7   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

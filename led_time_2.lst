C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 14:20:18 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LED_TIME_2
OBJECT MODULE PLACED IN led_time_2.obj
COMPILER INVOKED BY: B:\Keil C51\C51\BIN\C51.EXE src\led_time_2.c BROWSE DEBUG OBJECTEXTEND PRINT(.\led_time_2.lst) OBJE
                    -CT(led_time_2.obj)

line level    source

   1          #include "reg51.h"
   2          #include "stdio.h"
   3          #include "key.h"
   4          #include "serial_port.h"
   5          
   6          #define NORMAL_RUN 0
   7          #define SET_HOUR 1
   8          #define SET_MIN 2
   9          #define SET_SEC 3
  10          
  11          sbit LSA=P1^7;   //38移位按键
  12          sbit LSB=P1^6;
  13          sbit LSC=P1^5;
  14          // sfr AUXR = 0x8e;
  15          
  16          char time_count;
  17          int display_nums[11] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x67,0x40}; // 0-9 and -
  18          int t [8] ;
  19          int mode;
  20          // int the_last_key;
  21          int t_count;
  22          int reg_value;
  23          char hour = 0;
  24          char min = 0;
  25          char sec = 0;
  26          
  27          void time_init(void); // 计时器0 初始化
  28          void time_cal(int *);  // 时间计算
  29          void select_led(int);  // select index of leds 38译码器  使用 74hc138
  30          void led_display(int,int); // 数码管显示
  31          void prinf_(void);
  32          void set_time(void);
  33          
  34          
  35          void select_led(int i)
  36          {
  37   1              switch(i)
  38   1              {
  39   2                  case 0:
  40   2                      LSA = 0; LSB = 0; LSC = 0; break;
  41   2                  case 1:
  42   2                      LSA = 1; LSB = 0; LSC = 0; break;
  43   2                  case 2:
  44   2                      LSA = 0; LSB = 1; LSC = 0; break;
  45   2                  case 3:
  46   2                      LSA = 1; LSB = 1; LSC = 0; break;
  47   2                  case 4:
  48   2                      LSA = 0; LSB = 0; LSC = 1; break;
  49   2                  case 5:
  50   2                      LSA = 1; LSB = 0; LSC = 1; break;
  51   2                  case 6:
  52   2                      LSA = 0; LSB = 1; LSC = 1; break;
  53   2                  case 7:
  54   2                      LSA = 1; LSB = 1; LSC = 1; break;
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 14:20:18 PAGE 2   

  55   2                  default:
  56   2                      break;
  57   2              }
  58   1      }
  59          
  60          
  61          void time_cal( int *a)
  62          {
  63   1          char dpl [8] = {0,0,10,0,0,10};
  64   1          int i ;
  65   1      
  66   1          if(time_count == 60)
  67   1          {
  68   2              min += 1;
  69   2              time_count = 0 ;
  70   2          }
  71   1          sec = time_count;
  72   1      
  73   1          if(min == 60)
  74   1          {
  75   2              hour += 1;
  76   2              min = 0 ;
  77   2          }
  78   1          if(hour == 24)
  79   1          {
  80   2              hour = 0;
  81   2          }
  82   1          dpl[0] = hour / 10;
  83   1          dpl[1] = hour % 10;
  84   1          dpl[3] = min / 10;
  85   1          dpl[4] = min % 10;
  86   1          dpl[6] = sec / 10;
  87   1          dpl[7] = sec % 10;
  88   1      
  89   1          for(i=0;i<=7;i++)
  90   1          {
  91   2              a[i] = display_nums[dpl[i]];
  92   2          }
  93   1      
  94   1      }
  95          
  96          
  97          void time_init(void)            //1毫秒@11.0592MHz
  98          {
  99   1      
 100   1              TMOD &= 0xf0;
 101   1              TMOD |= 0x01;
 102   1              TH0 = 0xfc;
 103   1              TL0 = 0x21;
 104   1              TF0 = 0;
 105   1              TR0 = 1;
 106   1      
 107   1      }
 108          
 109          void led_display( int display_mode,int index)
 110          {
 111   1          P0 = 0x00;
 112   1          switch(display_mode)
 113   1          {
 114   2              case NORMAL_RUN:
 115   2              {
 116   3                  select_led(index);
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 14:20:18 PAGE 3   

 117   3                      P0 = t[index];
 118   3              }
 119   2      
 120   2              break;
 121   2      
 122   2              case SET_HOUR:
 123   2              {
 124   3                  if(index == 0 || index == 1)
 125   3                  {
 126   4                      if(t_count > 400)
 127   4                      {
 128   5                          select_led(index);
 129   5                          P0 = t[index];
 130   5                      }
 131   4      
 132   4                  }
 133   3                  else
 134   3                  {
 135   4                      select_led(index);
 136   4                      P0 = t[index];
 137   4                  }
 138   3      
 139   3              }
 140   2      
 141   2              break;
 142   2      
 143   2              case SET_MIN:
 144   2              {
 145   3                  if(index == 3 || index == 4)
 146   3                  {
 147   4                      if(t_count > 400)
 148   4                      {
 149   5                          select_led(index);
 150   5                          P0 = t[index];
 151   5                      }
 152   4      
 153   4                  }
 154   3                  else
 155   3                  {
 156   4                      select_led(index);
 157   4                      P0 = t[index];
 158   4                  }
 159   3      
 160   3              }
 161   2      
 162   2              break;
 163   2      
 164   2      
 165   2              case SET_SEC:
 166   2              {
 167   3                  if(index == 6 || index == 7)
 168   3                  {
 169   4                      if(t_count > 400)
 170   4                      {
 171   5                          select_led(index);
 172   5                          P0 = t[index];
 173   5                      }
 174   4      
 175   4                  }
 176   3                  else
 177   3                  {
 178   4                      select_led(index);
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 14:20:18 PAGE 4   

 179   4                      P0 = t[index];
 180   4                  }
 181   3      
 182   3              }
 183   2      
 184   2              break;
 185   2      
 186   2          }
 187   1      
 188   1      
 189   1      
 190   1      }
 191          
 192          void set_time()
 193          {
 194   1          switch(mode)
 195   1          {
 196   2              case NORMAL_RUN:
 197   2                      {
 198   3      
 199   3                  if((reg_value == (SELECT | KEY_LONG))||(reg_value == (SELECT | KEY_DOWN))){
 200   4                     mode = SET_HOUR;
 201   4                  }
 202   3                  // if(reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))||(reg_value == (
             -CONFIRM | KEY_CONTINUE)){
 203   3                  //     mode = NORMAL_RUN;
 204   3                  // }
 205   3              break;
 206   3      
 207   3              case SET_HOUR:{
 208   4                  // if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
 209   4                  //     mode = SET_MIN;
 210   4                  // }
 211   4                  if(reg_value == (SELECT | KEY_DOWN))
 212   4                      mode = SET_MIN;
 213   4                  }
 214   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))||(reg_value == (CO
             -NFIRM | KEY_CONTINUE))){
 215   4                      mode = NORMAL_RUN;
 216   4                  }
 217   3      
 218   3                  if(reg_value == (PLUS | KEY_DOWN)){
 219   4                      hour += 1;
 220   4                  }
 221   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 222   4                      hour += 1;
 223   4                  }
 224   3                  if(reg_value == (MINUS | KEY_DOWN)){
 225   4                      hour -= 1;
 226   4                      if(hour < 0)
 227   4                      hour += 24;
 228   4                  }
 229   3                  if(reg_value == (MINUS | KEY_CONTINUE)){
 230   4                      hour -= 1;
 231   4                      if(hour < 0)
 232   4                      hour += 24;
 233   4                  }
 234   3              }
 235   2              break;
 236   2      
 237   2              case SET_MIN:{
 238   3                  // if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 14:20:18 PAGE 5   

 239   3                  //     mode = SET_SEC;
 240   3                  // }
 241   3      
 242   3                  if(reg_value == (SELECT | KEY_DOWN)){
 243   4                      mode = SET_SEC;
 244   4                  }
 245   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))||(reg_value == (CO
             -NFIRM | KEY_CONTINUE))){
 246   4                      mode = NORMAL_RUN;
 247   4                  }
 248   3                  if(reg_value == (PLUS | KEY_DOWN)){
 249   4                      min += 1;
 250   4                  }
 251   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 252   4                      min += 1;
 253   4                  }
 254   3                  if(reg_value == (MINUS | KEY_DOWN)){
 255   4                      min -= 1;
 256   4                      if(min < 0)
 257   4                      min += 60;
 258   4                  }
 259   3                  if(reg_value == (MINUS| KEY_CONTINUE)){
 260   4                      min -= 1;
 261   4                      if(min < 0)
 262   4                      min += 60;
 263   4                  }
 264   3              }
 265   2              break;
 266   2      
 267   2              case SET_SEC:{
 268   3                  // if((reg_value == (SELECT | KEY_DOWN))||(reg_value == (SELECT | KEY_LONG))){
 269   3                  //     mode = SET_HOUR;
 270   3                  // }
 271   3      
 272   3                  if(reg_value == (SELECT | KEY_DOWN)){
 273   4                      mode = SET_HOUR;
 274   4                  }
 275   3      
 276   3                  if((reg_value == (CONFIRM | KEY_DOWN))||(reg_value == (CONFIRM | KEY_LONG))||(reg_value == (CO
             -NFIRM | KEY_CONTINUE))){
 277   4                      mode = SET_HOUR;
 278   4                  }
 279   3      
 280   3                  if(reg_value == (PLUS | KEY_DOWN)){
 281   4                      time_count += 1;
 282   4                  }
 283   3                  if(reg_value == (PLUS | KEY_CONTINUE)){
 284   4                      time_count += 1;
 285   4                  }
 286   3                  if(reg_value == (MINUS | KEY_DOWN)){
 287   4                      time_count -= 1;
 288   4                      if(time_count < 0)
 289   4                      time_count += 60;
 290   4                  }
 291   3                  if(reg_value == (MINUS | KEY_CONTINUE)){
 292   4                      time_count -= 1;
 293   4                      if(time_count < 0)
 294   4                      time_count += 60;
 295   4                  }
 296   3              }
 297   2              break;
 298   2      
C51 COMPILER V9.01   LED_TIME_2                                                            07/15/2018 14:20:18 PAGE 6   

 299   2          default: break;
 300   2      
 301   2          }
 302   1      }
 303          
 304          main()
 305          {
 306   1          int i = 0;
 307   1          mode = NORMAL_RUN;
 308   1          time_count = 0;
 309   1          time_init();
 310   1          key_init();
 311   1          init_serial_port();
 312   1          P0 = 0x00;
 313   1          time_cal(t);
 314   1      
 315   1          while(1)
 316   1          {
 317   2              if(TF0){
 318   3      
 319   3                  TH0 = 0xfc; //设置定时初值
 320   3                  TL0 = 0x21; //设置定时初值  初略测试 996每秒误差4-5 ms 改992
 321   3                  TF0 = 0;
 322   3                  t_count++;
 323   3      
 324   3                  if(t_count % 1 == 0){
 325   4                      led_display(mode,i++);
 326   4                      if(i>7) i = 0;
 327   4                  }
 328   3      
 329   3                  if(t_count % 10 ==0){
 330   4                      get_key(&reg_value);
 331   4                  }
 332   3      
 333   3                  if(t_count % 11 ==0){
 334   4                      set_time();
 335   4                  }
 336   3      
 337   3                  if(t_count % 50 == 0){
 338   4                      time_cal(t);
 339   4                  }
 340   3      
 341   3                              if(t_count % 1000 == 0){
 342   4                      t_count = 0;
 343   4                                      time_count++;
 344   4                              }
 345   3      
 346   3              }
 347   2          }
 348   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1001    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
